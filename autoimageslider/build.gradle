/*apply plugin: 'com.android.library'


ext {

    bintrayRepo = 'android'
    bintrayName = 'androidautoimageslider'

    publishedGroupId = 'com.github.smarteist'
    libraryName = 'autoimageslider'
    artifact = 'autoimageslider'

    libraryDescription = 'Simple, android image slider'

    siteUrl = 'https://github.com/smarteist'
    gitUrl = 'https://github.com/smarteist/android-image-slider.git'

    libraryVersion = '1.4.0'
    organization = 'smarteistbintray' // if you push to organization's repository.
    developerId = 'smarteist'
    developerName = 'Ali Hosseini'
    developerEmail = 'ali.hosseini.sr@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]

}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 5
        versionName "1.3.9"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

// Add a new configuration to hold your dependencies
configurations {
    libConfig
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}

task copyLibs(type: Copy) {
    from configurations.libConfig
    into 'libs'
}

apply from: 'https://raw.githubusercontent.com/smarteist/bintrayUpload/master/install.gradle'
apply from: 'https://raw.githubusercontent.com/smarteist/bintrayUpload/master/bintray.gradle'



apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

ext {
    publishedGroupId = 'com.github.smarteist'
    artifact = 'autoimageslider'
    libraryVersion = '1.4.0'
    libraryDescription = 'Simple, android image slider'

    siteUrl = 'https://github.com/smarteist'
    gitUrl = 'https://github.com/smarteist/android-image-slider.git'

    developerId = 'smarteist'
    developerName = 'Ali Hosseini'
    developerEmail = 'ali.hosseini.sr@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 5
        versionName "1.3.9"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

// Maven publishing configuration
publishing {
    publications {
        release(MavenPublication) {
            from components.release

            groupId = publishedGroupId
            artifactId = artifact
            version = libraryVersion

            pom {
                name.set(artifact)
                description.set(libraryDescription)
                url.set(siteUrl)

                licenses {
                    license {
                        name.set(licenseName)
                        url.set(licenseUrl)
                    }
                }

                developers {
                    developer {
                        id.set(developerId)
                        name.set(developerName)
                        email.set(developerEmail)
                    }
                }

                scm {
                    connection.set("scm:git:$gitUrl")
                    developerConnection.set("scm:git:$gitUrl")
                    url.set(siteUrl)
                }
            }
        }
    }

    repositories {
        maven {
            url = uri("path/to/your/maven/repository") // Update with your repository URL
        }
    }
}*/
apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

ext {
    publishedGroupId = 'com.github.smarteist'
    artifact = 'autoimageslider.copy'
    libraryVersion = '1.4.1'
    libraryDescription = 'Simple, android image slider'

    siteUrl = 'https://github.com/smarteist'
    gitUrl = 'https://github.com/amir135/Smarteist-Android-Image-Slider.git'

    developerId = 'smarteist'
    developerName = 'Ali Hosseini'
    developerEmail = 'ali.hosseini.sr@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    namespace 'com.smarteist.autoimageslidercopy'
    compileSdk 35

    defaultConfig {
       // applicationId "com.smarteist.autoimageslidercopy"
        minSdkVersion 15
        targetSdkVersion 34
        versionCode 6
        versionName "1.4.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

// Maven publishing configuration
publishing {
    publications {
        // Create a publication for the release variant
        release(MavenPublication) {
            // Use the release variant's Android components for publishing
            afterEvaluate {
                from components.findByName("release")
            }

            groupId = publishedGroupId
            artifactId = artifact
            version = libraryVersion

            pom {
                name.set(artifact)
                description.set(libraryDescription)
                url.set(siteUrl)

                licenses {
                    license {
                        name.set(licenseName)
                        url.set(licenseUrl)
                    }
                }

                developers {
                    developer {
                        id.set(developerId)
                        name.set(developerName)
                        email.set(developerEmail)
                    }
                }

                scm {
                    connection.set("scm:git:$gitUrl")
                    developerConnection.set("scm:git:$gitUrl")
                    url.set(siteUrl)
                }
            }
        }
    }

    repositories {
        maven {
            url = uri("path/to/your/maven/repository") // Update with your repository URL
        }
    }
}
